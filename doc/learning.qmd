---
title: "Reproducible documents"
author: "Vi Varga"
format: html
---

```{r setup}
#| include: false
library(tidyverse)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```


## Table of results

```{r max-min-bmi-table}
#| echo: false
#| warning: false
#| message: false
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  group_by(diabetes, education) %>%
  summarise(
    max_bmi = max(bmi, na.rm = TRUE),
    min_bmi = min(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Max & Min values of BMI for each diabetes & education status")
```


## Prettier table

```{r prettier-table}
#| echo: false
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, 1),
    mean_bmi = round(mean_bmi, 2),
    # Task 2b.
    education = str_to_sentence(education)
  ) %>%
  rename(
    # Task 3.
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```


## Inserting images

Cute kitten in @fig-kitten-attack!

![Image by Dimitri Houtteman from Pixabay.](images/kitten.jpg){#fig-kitten-attack width="50%" height="50%"}


## Visualizing data

### One variable plots

```{r}
# Create histogram for BMI
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

```{r}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo
nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

```{r}
# Create count barplot for education
ggplot(nhanes_small, aes(x = education)) +
  geom_bar()

# Create count barplot for diabetes status
ggplot(nhanes_small, aes(x = diabetes)) +
  geom_bar()
```

```{r}
#| label: fig-diabetes-education
#| fig-cap: "Counts of Diabetes and Education."
#| fig-subcap:
#|   - "Number of those with or without Diabetes."
#|   - "Number of those with different educational status."
#| layout-ncol: 2
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```


### Plotting two variables

```{r}
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE)

# Runs a smoothing line with confidence interval
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```

```{r}
# Two categorical/discrete variables
# Note that we can pipe data into ggplot
nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar()

# "dodged" (side-by-side) bar plot
nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge())
```

```{r}
# Using mixed data
nhanes_small %>%
  filter(!is.na(diabetes), bmi <= 60) %>%
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = TRUE)
```


### Exercise to make plots with one or two variables

```{r}
# 1. Start with the original NHANES dataset to have access to more variables.
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

```{r}
# 2. With the nhanes_exercise data, use geom_density() to show the distribution of age (participantâ€™s age at collection) and diabetes_age (age of diabetes diagnosis) in two separate, side-by-side plots, but inside one code chunk.
#| layout-ncol: 2
#| label: fig-distribution-ages
#| fig-cap: "Distribution of different age variables"
#| fig-supcap:
#|   - "Age at collection"
#|   - "Age of diabetes diagnosis"

# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```

```{r}
# 3. With nhanes_exercise, use filter() and geom_bar() to find out how many people there who currently smoke (smoke_now) and who are at or above the age or 20. Drop missing values (!is.na()) from smoke_now
#| label: smoke-now-age
#| fig-cap: "Distribution of people of age >= 20 who smoke"

# Number of people who smoke now and are or above 20 years of age,
# removing those with missing smoking status.
nhanes_exercise %>%
  filter(age >= 20, !is.na(smoke_now)) %>%
  ggplot(aes(x = smoke_now)) +
  geom_bar()
```

```{r}
# 4. Use mutate() to create a new column called mean_arterial_pressure using this formula above. The code template below will help you start out. Then, use geom_hex() and add another layer for geom_smooth() to find out how bmi (on the x-axis) relates to mean_arterial_pressure (on the y-axis).

# BMI in relation to mean arterial pressure
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth()
```


### Plotting three or more variables

```{r}
# Plot systolic blood pressure in relation to education and diabetes status
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
  geom_boxplot(na.rm = TRUE)
```

```{r}
# Plot BMI in relation to systolic blood pressure and age
nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE)

# Plot BMI in relation to systolic blood pressure and diabetes status
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = diabetes)) +
  geom_point(na.rm = TRUE)
```

```{r}
# Plot BMI in relation to systolic blood pressure and diabetes status using
# faceting by column
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(cols = vars(diabetes))

# faceting by row
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(rows = vars(diabetes))

# Plot BMI in relation to systolic blood pressure, age, education and diabetes status
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE) +
  facet_grid(
    rows = vars(diabetes),
    cols = vars(education)
  )
```
